{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "ms-auth-service",
    "description" : "Servidor de autenticação OAuth2 para aplicações Java Springboot",
    "contact" : {
      "name" : "Guilherme Hahn",
      "url" : "https://github.com/HahnGuil",
      "email" : "guilherme.f.h@hotmail.com"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "hostname:2310/auth-server",
    "description" : "Desenvolvimento"
  }, {
    "url" : "hostname:2300/auth-server",
    "description" : "Ambiente - Docker"
  } ],
  "paths" : {
    "/auth/change-password" : {
      "put" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "changePassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordOperationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Password successfully changed"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "BB"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "Invalid credentials" : {
                    "description" : "Credentials invalid",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:00Z",
                      "message" : "Invalid email or password."
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "CCC"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not found" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:32Z",
                      "message" : "User not found. Check email and password or register a new user."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/validate-recoverToken" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "validateToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordOperationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : "mXnfgwqwj_V6gBh-PLyUiCfU0eYqSZTO8xcWTgegDx3AHWb...",
                  "properties" : {
                    "refresnToken" : { }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "BF"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "Invalid recover token" : {
                    "description" : "Invalid recover token",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:50Z",
                      "message" : "Recover Token is expired"
                    }
                  },
                  "Invalid recover code" : {
                    "description" : "Invalid recover code",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:53Z",
                      "message" : "Invalid recover code"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "CCC"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not found" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:32Z",
                      "message" : "User not found. Check email and password or register a new user."
                    }
                  },
                  "Reset password request not found" : {
                    "description" : "Reset password not found",
                    "value" : {
                      "timestamp" : "2024-02-15T10:30:32Z",
                      "message" : "Not found reset password for this user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "resetePassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordOperationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "CCC"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not found" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:32Z",
                      "message" : "User not found. Check email and password or register a new user."
                    }
                  },
                  "Reset password not found" : {
                    "description" : "Reset password not found",
                    "value" : {
                      "timestamp" : "2024-02-15T10:30:32Z",
                      "message" : "Not found reset password for this user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "register",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "User successfully registered",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "user" : {
                      "properties" : {
                        "userId" : { },
                        "userName" : {
                          "example" : "userName"
                        },
                        "email" : {
                          "example" : "userEmail@gmail.com"
                        },
                        "firstName" : { },
                        "lastName" : { },
                        "pictureUrl" : { }
                      }
                    },
                    "message" : {
                      "example" : "User successfully registered"
                    }
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "User already registered",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Email already registered. Please log in or recover your password."
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "alreadyRegistered" : {
                    "description" : "User already exist",
                    "value" : {
                      "timestamp" : "2024-01-15T10:37:00Z",
                      "message" : "Email already registered. Please log in or recover your password."
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Database server exception",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Can't save user on database"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "dbError" : {
                    "description" : "Error saving user to database",
                    "value" : {
                      "timestamp" : "2024-01-15T10:31:00Z",
                      "message" : "Can't save user on database"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "refreshToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : "mXnfgwqwj_V6gBh-PLyUiCfU0eYqSZTO8xcWTgegDx3AHWb...",
                  "properties" : {
                    "refresnToken" : { }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "BBBB"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "Invalid refresh token" : {
                    "description" : "Refresh token is invalid",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:00Z",
                      "message" : "Invalid refresh token"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "AAA"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not found" : {
                    "description" : "User not found for application",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:02Z",
                      "message" : "User not found for this application"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginResponseDTO"
                }
              }
            }
          },
          "201" : {
            "description" : "Login successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : "mXnfgwqwj_V6gBh-PLyUiCfU0eYqSZTO8xcWTgegDx3AHWbh...",
                  "properties" : {
                    "email" : { },
                    "token" : { },
                    "refreshToken" : { }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Error message"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "blocked" : {
                    "description" : "User blocked, password reset required",
                    "value" : {
                      "timestamp" : "2024-01-15T10:40:00Z",
                      "message" : "This user has been blocked. Use the password reset link."
                    }
                  },
                  "oauth" : {
                    "description" : "Direct login for OAuth user is not allowed.",
                    "value" : {
                      "timestamp" : "2024-01-15T10:31:00Z",
                      "message" : "Direct login is not allowed for users created with OAuth."
                    }
                  },
                  "invalidCredentials" : {
                    "description" : "Credentials invalid",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:00Z",
                      "message" : "Invalid email or password."
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "CCC"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not Found" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:32Z",
                      "message" : "User not found. Check email and password or register a new user."
                    }
                  },
                  "User not Found for this application" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:02Z",
                      "message" : "User not found for this application"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password" : {
      "post" : {
        "tags" : [ "auth-controller" ],
        "operationId" : "forgotPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordOperationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "Reset code send to email"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "BB"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "Invalid Credentials" : {
                    "description" : "Credentials invalid",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:00Z",
                      "message" : "Invalid email or password."
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "message" : {
                      "example" : "CCC"
                    },
                    "timestamp" : {
                      "example" : "2024-01-15T10:30:00Z"
                    }
                  }
                },
                "examples" : {
                  "User not found" : {
                    "description" : "User not found",
                    "value" : {
                      "timestamp" : "2024-01-15T10:30:32Z",
                      "message" : "User not found. Check email and password or register a new user."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public-key/jwks" : {
      "get" : {
        "tags" : [ "public-key-controller" ],
        "operationId" : "getPublicKeys",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PasswordOperationRequestDTO" : {
        "type" : "object",
        "description" : "DTO for password operations such as change or recovery.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email address",
            "example" : "user@example.com"
          },
          "oldPassword" : {
            "type" : "string",
            "description" : "User's current password",
            "example" : "OldP@ssw0rd!"
          },
          "newPassword" : {
            "type" : "string",
            "description" : "User's new password",
            "example" : "NewP@ssw0rd!"
          },
          "recoverCode" : {
            "type" : "string",
            "description" : "Recovery code for password reset",
            "example" : 123456
          }
        }
      },
      "UserRequestDTO" : {
        "type" : "object",
        "description" : "DTO for user creation or update requests.",
        "properties" : {
          "userName" : {
            "type" : "string",
            "description" : "User's username",
            "example" : "john_doe"
          },
          "email" : {
            "type" : "string",
            "description" : "User's email address",
            "example" : "john.doe@example.com"
          },
          "password" : {
            "type" : "string",
            "description" : "User's password",
            "example" : "P@ssw0rd!"
          },
          "firstName" : {
            "type" : "string",
            "description" : "User's first name",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "description" : "User's last name",
            "example" : "Doe"
          },
          "pictureUrl" : {
            "type" : "string",
            "description" : "URL of the user's profile picture",
            "example" : "https://example.com/images/john.jpg"
          },
          "application" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "ID of the application associated with the user",
            "example" : 1
          },
          "typeUser" : {
            "type" : "string",
            "description" : "Flag to signal when the user is Oauth",
            "example" : true
          }
        },
        "required" : [ "email", "userName" ]
      },
      "LoginRequestDTO" : {
        "type" : "object",
        "description" : "DTO for user login request containing email and password.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email address",
            "example" : "user@example.com"
          },
          "password" : {
            "type" : "string",
            "description" : "User's password",
            "example" : "P@ssw0rd!"
          }
        }
      },
      "LoginResponseDTO" : {
        "type" : "object",
        "description" : "DTO representing the response after a successful user login.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email address",
            "example" : "user@example.com"
          },
          "token" : {
            "type" : "string",
            "description" : "JWT access token for authentication",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken" : {
            "type" : "string",
            "description" : "JWT refresh token for renewing authentication",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      }
    }
  }
}